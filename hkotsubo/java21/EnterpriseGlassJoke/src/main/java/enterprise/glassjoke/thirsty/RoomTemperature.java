package enterprise.glassjoke.thirsty;

import enterprise.glassjoke.entity.Intern;
import enterprise.glassjoke.entity.OfficeEntity;

/**
 * Room temperature might affect thirsty levels.
 *
 * The hotter it is, the more thirsty it gets.
 *
 * @author hkotsubo
 */
public class RoomTemperature implements ThirstyFactor {

    private double celsius;

    /**
     * Create a room temperature
     *
     * @param celsius The temperature in celsius
     *
     * @return The room temperature
     */
    public static RoomTemperature ofCelsius(double celsius) {
        return new RoomTemperature(celsius);
    }

    /**
     * Create a room temperature
     *
     * @param fahrenheit The temperature in fahrenheit
     *
     * @return The room temperature
     */
    public static RoomTemperature ofFahrenheit(double fahrenheit) {
        return new RoomTemperature(fahrenheitToCelsius(fahrenheit));
    }

    private static double fahrenheitToCelsius(double fahrenheit) {
        return (fahrenheit - 32) * 5.0 / 9.0;
    }

    private static double celsiusToFahrenheit(double celsius) {
        return (celsius * 9.0 / 5.0) + 32.0;
    }

    private RoomTemperature(double celsius) {
        this.celsius = celsius;
    }

    /**
     * Get the temperature in celsius
     *
     * @return The temperature in celsius
     */
    public double getCelsius() {
        return this.celsius;
    }

    /**
     * Get the temperature in fahrenheit
     *
     * @return The temperature in fahrenheit
     */
    public double getFahrenheit() {
        return celsiusToFahrenheit(this.celsius);
    }

    /**
     * Set the temperature in celsius
     *
     * @param celsius The new temperature in celsius
     */
    public void setCelsius(double celsius) {
        this.celsius = celsius;
    }

    /**
     * Set the temperature in fahrenheit
     *
     * @param fahrenheit The new temperature in fahrenheit
     */
    public void setFahrenheit(double fahrenheit) {
        this.celsius = fahrenheitToCelsius(fahrenheit);
    }

    /**
     * Get the thirsty level generated by room temperature
     *
     * @param entity The office entity affected by the room temperature
     *
     * @return The amount of milliliters the entity wants to drink
     */
    @Override
    public int getThirstyLevel(OfficeEntity entity) {
        if (entity instanceof Intern) {
            // interns can't drink as much as they want, return always the same level
            return 10;
        }

        if (celsius <= 0) {
            return 1;
        } else if (celsius <= 10) {
            return 50;
        } else if (celsius <= 20) {
            return 100;
        } else if (celsius <= 30) {
            return 200;
        } else if (celsius <= 40) {
            return 300;
        }
        return 500;
    }
}
