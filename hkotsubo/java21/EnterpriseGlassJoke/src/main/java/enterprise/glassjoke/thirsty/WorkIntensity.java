package enterprise.glassjoke.thirsty;

import enterprise.glassjoke.entity.Intern;
import enterprise.glassjoke.entity.OfficeEntity;

/**
 * Work intensity might affect thirsty levels.
 *
 * The more intense it is, the more thirsty it gets.
 *
 * TODO: create an accurate definition for intensity. Ex: if intensity is 1000, is this high or low?
 *
 * @author hkotsubo
 */
public class WorkIntensity implements ThirstyFactor {

    private int intensity;

    public WorkIntensity(int intensity) {
        this.intensity = intensity;
    }

    /**
     * Get the work intensity
     *
     * @return The work intensity
     */
    public int getIntensity() {
        return intensity;
    }

    /**
     * Set the work intensity
     *
     * @param intensity The work intensity
     */
    public void setIntensity(int intensity) {
        this.intensity = intensity;
    }

    /**
     * Get the thirsty level generated by work intensity
     *
     * @param entity The office entity affected by the work intensity
     *
     * @return The amount of milliliters the entity wants to drink
     */
    @Override
    public int getThirstyLevel(OfficeEntity entity) {
        if (entity instanceof Intern) {
            // interns can't drink as much as they want, return always the same level
            return 10;
        }

        // keep it simple for now
        // TODO: define more levels, make them customizable according to job description, etc
        // TODO 2: add support for job descriptions
        if (intensity <= 5000) {
            return 200;
        }
        return 300;
    }
}
